# Forest communities: beetles, birds and plants

```{r}
#| label: setup-case2
#| message: false
#| warning: false
#| cache: false
# Load required packages
# Data manipulation
library(here)
library(readxl)
library(tidyverse)
library(DT)
# Modeling
library(mrIML)
library(tidymodels)
library(future)
library(finetune)
library(flashlight)
# Plotting
library(igraph)
library(ggnetwork)
library(cowplot)
library(patchwork)

# Load custom functions
source(here("R-functions", "select_variables.r"))
source(here("R-functions", "plot_network.r"))

# Set seed
set.seed(123)

# Set up parallel processing
n_cores <- parallel::detectCores()
plan("multicore", workers = 2)

# Set data directory
data_dir <- here("case-studies", "02-forest-communities", "data", "raw")
```

This case study demonstrates *MrIML 2.0* on a larger dataset with multiple taxonomic groups across a forest successional gradient. We analyze 144 plots established across forest age categories:

- **Mature forest**: Unharvested with no fire disturbance for â‰¥60 years
- **~45 years post-harvest**
- **~27 years post-harvest** 
- **~7 years post-harvest**

At each plot, we recorded ground-active beetles, plants, and birds, along with environmental covariates including coarse wood debris, leaf litter depth, and soil variables (pH, conductivity).

## Data Preparation

```{r}
#| label: load-predictors
raw_predictors <- read_excel(
  file.path(data_dir, "Site_covariates_decision_making_4.xlsx"),
  sheet = 4
) %>%
  column_to_rownames(var = "plot_code") %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  dplyr::select(-plot_code_T_D, -Transect)

datatable(raw_predictors)
```

:::{.panel-tabset}

### Beetles

```{r}
#| label: load-beetle-data
raw_data_beetles <- read_excel(
  file.path(data_dir, "all_taxa_all_sp_mat_sp.xlsx"),
  sheet = "beetles_all",
) %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

datatable(raw_data_beetles)
```

### Birds

```{r}
#| label: load-bird-data
raw_data_birds <- read_excel(
  file.path(data_dir, "all_taxa_all_sp_mat_sp.xlsx"),
  sheet = "birds_all"
) %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

datatable(raw_data_birds)
```

### Plants

```{r}
#| label: load-plant-data
raw_data_plants <- read_excel(
  file.path(data_dir, "all_taxa_all_sp_mat_sp.xlsx"),
  sheet = "plants_all"
) %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

datatable(raw_data_plants)
```

:::

## Model

This analysis uses a random forrest model.

```{r}
#| label: model-def
model_rf <- rand_forest(
  trees = 1000,
  mode = "classification",
  mtry = tune(),
  min_n = tune()
) %>%
  set_engine("randomForest")
```

## Beetle Community Analysis

Preparing the X and Y matrix for `mrIML`.

```{r}
#| labels: beetle-data-prep
# Filter rare and common species (20-70% prevalence)
Y_beetles <- filterRareCommon(raw_data_beetles, lower = 0.2, higher = 0.7)

# Prepare environmental predictors
X_beetles <- raw_predictors %>%
  dplyr::select(
    -Beetles_S_Mat_Indval2,
    -Beetle_S_Total,
    -dist_regrowth,
    -Age,
    -Beetles_Mat_Ratio,
    -Birds_S_Mat_EFL,
    -Birds_S_Total,
    -Birds_Mat_Ratio,
    -slope_f_Jayne,
    -aspect_f_Jayne
  )

# Convert categorical variables
X_beetles$Site <- as.factor(X_beetles$Site)
X_beetles$geol_Jayne <- as.factor(X_beetles$geol_Jayne)

# Variable selection
var_sel_beetles <- select_variables(Y = Y_beetles, X = X_beetles)
X_beetles <- var_sel_beetles[[2]]

# Remove site for model comparison
X_beetles$Site <- NULL

# Co-occurrence matrix
X1_beetles <- Y_beetles
```

### Beetle Model Configuration and Training

```{r}
#| label: mrIML-model-beetle
#| results: "hide"
#| messages: false
# Model 1: Environment only
yhats_beetles_env <- mrIMLpredicts(
  X = X_beetles,
  Y = Y_beetles,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Model 2: Co-occurrence only
yhats_beetles_cooccur <- mrIMLpredicts(
  Y = Y_beetles,
  X1 = X1_beetles,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Model 3: Combined
yhats_beetles_combined <- mrIMLpredicts(
  X = X_beetles,
  Y = Y_beetles,
  X1 = X1_beetles,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)
```

### Beetle Performance Assessment

```{r beetle-performance, eval=FALSE}
# Evaluate model performance
ModelPerf_beetles_env <- mrIMLperformance(yhats_beetles_env)
ModelPerf_beetles_cooccur <- mrIMLperformance(yhats_beetles_cooccur)
ModelPerf_beetles_combined <- mrIMLperformance(yhats_beetles_combined)

# Performance comparison
perf_comparison_beetles <- mrPerformancePlot(
  ModelPerf1 = ModelPerf_beetles_combined,
  ModelPerf2 = ModelPerf_beetles_env,
  mode = "classification"
)

perf_comparison_beetles$performance_plot +
  labs(title = "Beetle Community Model Performance")

# Summary table
beetle_performance <- data.frame(
  Model = c("Environment only", "Co-occurrence only", "Combined"),
  MCC = c(
    ModelPerf_beetles_env[[2]],
    ModelPerf_beetles_cooccur[[2]],
    ModelPerf_beetles_combined[[2]]
  )
)
beetle_performance
```

### Beetle Variable Importance and Associations

```{r}
#| results: "hide"
# Bootstrap analysis
bs_beetles <- mrBootstrap(yhats_beetles_combined, num_bootstrap = 100)
```

```{r}
# Variable importance
vi_beetles <- mrVip(
  yhats_beetles_combined,
  mrBootstrap_obj = bs_beetles,
  threshold = 0.5,
  global_top_var = 10
)

vi_beetles[[3]] +
  labs(title = "Beetle Community Variable Importance")
```

```{r}
# Co-occurrence network
assoc_net_beetles <- mrCoOccurNet(bs_beetles)
plot_network(
  assoc_net_beetles,
  strength_threash = 0.1,
  network_title = "Beetle Co-occurrence Network"
)
```

### Beetle interactions

```{r}
interactions_rf <- yhats_beetles_combined %>%
  mrInteractions(num_bootstrap = 10)

interactions_rf[[1]]
```

## Bird community analysis

```{r}
#| label: bird-comunity-analysis
#| results: "hide"
#| messages: false
# Prepare bird data (similar structure to beetles)
Y_birds <- filterRareCommon(raw_data_birds, lower = 0.2, higher = 0.7)

# Use same environmental predictors but select relevant variables
# Prepare environmental predictors
X_birds <- raw_predictors %>%
  dplyr::select(
    -Beetles_S_Mat_Indval2,
    -Beetle_S_Total,
    -dist_regrowth,
    -Age,
    -Beetles_Mat_Ratio,
    -Birds_S_Mat_EFL,
    -Birds_S_Total,
    -Birds_Mat_Ratio,
    -slope_f_Jayne,
    -aspect_f_Jayne
  )

# Convert categorical variables
X_birds$Site <- as.factor(X_birds$Site)
X_birds$geol_Jayne <- as.factor(X_birds$geol_Jayne)

# Remove site for model comparison
X_birds$Site <- NULL
var_sel_birds <- select_variables(Y = Y_birds, X = X_birds)
X_birds <- var_sel_birds[[2]]
X1_birds <- Y_birds

# Train models
yhats_birds_env <- mrIMLpredicts(
  X = X_birds,
  Y = Y_birds,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)
yhats_birds_cooccur <- mrIMLpredicts(
  Y = Y_birds,
  X1 = X1_birds,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)
yhats_birds_combined <- mrIMLpredicts(
  X = X_birds,
  Y = Y_birds,
  X1 = X1_birds,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Performance assessment
ModelPerf_birds_env <- mrIMLperformance(yhats_birds_env)
ModelPerf_birds_cooccur <- mrIMLperformance(yhats_birds_cooccur)
ModelPerf_birds_combined <- mrIMLperformance(yhats_birds_combined)

# Performance comparison
perf_comparison_birds <- mrPerformancePlot(
  ModelPerf1 = ModelPerf_birds_combined,
  ModelPerf2 = ModelPerf_birds_env,
  mode = "classification"
)
```

```{r}
# Plot performance
perf_comparison_birds$performance_plot +
  labs(title = "Bird Community Model Performance")
```

```{r}
# Performance summary table
bird_performance <- data.frame(
  Model = c("Environment only", "Co-occurrence only", "Combined"),
  MCC = c(
    ModelPerf_birds_env[[2]],
    ModelPerf_birds_cooccur[[2]],
    ModelPerf_birds_combined[[2]]
  )
)
bird_performance
```

```{r}
#| results: "hide"
# Bootstrap analysis
bs_birds <- mrBootstrap(yhats_birds_combined, num_bootstrap = 100)

# Variable importance
vi_birds <- mrVip(
  yhats_birds_combined,
  mrBootstrap_obj = bs_birds,
  threshold = 0.5,
  global_top_var = 10
)
```

```{r}
# Variable importance plot
vi_birds[[3]] +
  labs(title = "Bird Community Variable Importance")
```

```{r}
# Co-occurrence network
assoc_net_birds <- mrCoOccurNet(bs_birds)
plot_network(
  assoc_net_birds,
  strength_threash = 0.1,
  network_title = "Bird Co-occurrence Network"
)
```

## Plant community analysis

```{r}
#| label: Plant-comunity-analysis
#| results: "hide"
#| messages: false
# Prepare Plant data (similar structure to beetles)
Y_plants <- filterRareCommon(raw_data_plants, lower = 0.2, higher = 0.7)

# Use same environmental predictors but select relevant variables
# Prepare environmental predictors
X_plants <- raw_predictors %>%
  dplyr::select(
    -Beetles_S_Mat_Indval2,
    -Beetle_S_Total,
    -dist_regrowth,
    -Age,
    -Beetles_Mat_Ratio,
    -Birds_S_Mat_EFL,
    -Birds_S_Total,
    -Birds_Mat_Ratio,
    -slope_f_Jayne,
    -aspect_f_Jayne,
    -contains("Bryo"),
    -contains("Plant"),
    -contains("Moss"),
    -Vegetation_cover
  ) %>%
  rename_with(~ gsub("Jayne", "", .), contains("Jayne"))

# Convert categorical variables
X_plants$Site <- as.factor(X_plants$Site)
X_plants$geol_ <- as.factor(X_plants$geol_)

# Remove site for model comparison
X_plants$Site <- NULL
var_sel_plants <- select_variables(Y = Y_plants, X = X_plants)
X_plants <- var_sel_plants[[2]]
X1_plants <- Y_plants

# Train models
yhats_plants_env <- mrIMLpredicts(
  X = X_plants,
  Y = Y_plants,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)
yhats_plants_cooccur <- mrIMLpredicts(
  Y = Y_plants,
  X1 = X1_plants,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)
yhats_plants_combined <- mrIMLpredicts(
  X = X_plants,
  Y = Y_plants,
  X1 = X1_plants,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Performance assessment
ModelPerf_plants_env <- mrIMLperformance(yhats_plants_env)
ModelPerf_plants_cooccur <- mrIMLperformance(yhats_plants_cooccur)
ModelPerf_plants_combined <- mrIMLperformance(yhats_plants_combined)

# Performance comparison
perf_comparison_plants <- mrPerformancePlot(
  ModelPerf1 = ModelPerf_plants_combined,
  ModelPerf2 = ModelPerf_plants_env,
  mode = "classification"
)
```

```{r}
# Plot performance
perf_comparison_plants$performance_plot +
  labs(title = "Bird Community Model Performance")
```

```{r}
# Performance summary table
plant_performance <- data.frame(
  Model = c("Environment only", "Co-occurrence only", "Combined"),
  MCC = c(
    ModelPerf_plants_env[[2]],
    ModelPerf_plants_cooccur[[2]],
    ModelPerf_plants_combined[[2]]
  )
)
plant_performance
```

```{r}
#| results: "hide"
# Bootstrap analysis
bs_plants <- mrBootstrap(
  yhats_plants_combined,
  num_bootstrap = 100
)

# Variable importance
vi_plants <- mrVip(
  yhats_plants_combined,
  mrBootstrap_obj = bs_plants,
  threshold = 0.5,
  global_top_var = 10
)
```

```{r}
# Variable importance plot
vi_plants[[3]] +
  labs(title = "Bird Community Variable Importance")
```

```{r}
# Co-occurrence network
assoc_net_plants <- mrCoOccurNet(bs_plants)
plot_network(
  assoc_net_plants,
  strength_threash = 0.1,
  network_title = "Plant Co-occurrence Network",
  nmds_layout = TRUE
)
```
