---
title: "Case Study 2: Forest beetles, birds and plants"
subtitle: "MrIML 2.0 Application to Forest Successional Communities"
author: "Your Name"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    toc-depth: 3
    code-fold: false
    theme: cosmo
  pdf:
    toc: true
    number-sections: true
---

```{r}
#| label: setup
#| message: false
#| warning: false
# Load required packages
# Data manipulation
library(here)
library(readxl)
library(tidyverse)
library(DT)
# Modeling
library(mrIML)
library(tidymodels)
library(future)
library(finetune)
library(flashlight)
# Plotting
library(igraph)
library(ggnetwork)
library(cowplot)
library(patchwork)

# Load custom functions
source(here("R-functions", "select_variables.r"))

# Set up parallel processing
n_cores <- parallel::detectCores()
plan("multicore", workers = 2)

# Set data directory
data_dir <- here("case-studies", "02-forest-communities", "data", "raw")
```

This case study demonstrates *MrIML 2.0* on a larger dataset with multiple taxonomic groups across a forest successional gradient. We analyze 144 plots established across forest age categories:

- **Mature forest**: Unharvested with no fire disturbance for â‰¥60 years
- **~45 years post-harvest**
- **~27 years post-harvest** 
- **~7 years post-harvest**

At each plot, we recorded ground-active beetles, plants, and birds, along with environmental covariates including coarse wood debris, leaf litter depth, and soil variables (pH, conductivity).

## Data Preparation

```{r}
#| label: load-predictors
raw_predictors <- read_excel(
  file.path(data_dir, "Site_covariates_decision_making_4.xlsx"),
  sheet = 4
) %>%
  column_to_rownames(var = "plot_code") %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  dplyr::select(-plot_code_T_D, -Transect)

datatable(raw_predictors)
```

:::{.panel-tabset}

### Beetles

```{r}
#| label: load-beetle-data
raw_data_beetles <- read_excel(
  file.path(data_dir, "all_taxa_all_sp_mat_sp.xlsx"),
  sheet = "beetles_all",
) %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

datatable(raw_data_beetles)
```

### Birds

```{r}
#| label: load-bird-data
raw_data_birds <- read_excel(
  file.path(data_dir, "all_taxa_all_sp_mat_sp.xlsx"),
  sheet = "birds_all"
) %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

datatable(raw_data_birds)
```

### Plants

```{r}
#| label: load-plant-data
raw_data_plants <- read_excel(
  file.path(data_dir, "all_taxa_all_sp_mat_sp.xlsx"),
  sheet = "plants_all"
) %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

datatable(raw_data_plants)
```

:::

## Model

This analysis uses a random forrest model.

```{r}
#| label: model-def
model_rf <- rand_forest(
  trees = 1000,
  mode = "classification",
  mtry = tune(),
  min_n = tune()
) %>%
  set_engine("randomForest")
```

## Beetle Community Analysis

Preparing the X and Y matrix for `mrIML`.

```{r}
#| labels: beetle-data-prep
# Filter rare and common species (20-70% prevalence)
Y_beetles <- filterRareCommon(raw_data_beetles, lower = 0.2, higher = 0.7)

# Prepare environmental predictors
X_beetles <- raw_predictors %>%
  dplyr::select(
    -Beetles_S_Mat_Indval2,
    -Beetle_S_Total,
    -dist_regrowth,
    -Age,
    -Beetles_Mat_Ratio,
    -Birds_S_Mat_EFL,
    -Birds_S_Total,
    -Birds_Mat_Ratio,
    -slope_f_Jayne,
    -aspect_f_Jayne
  )

# Convert categorical variables
X_beetles$Site <- as.factor(X_beetles$Site)
X_beetles$geol_Jayne <- as.factor(X_beetles$geol_Jayne)

# Variable selection
var_sel_beetles <- select_variables(Y = Y_beetles, X = X_beetles)
X_beetles <- var_sel_beetles[[2]]

# Remove site for model comparison
X_beetles$Site <- NULL

# Co-occurrence matrix
X1_beetles <- Y_beetles
```

### Beetle Model Configuration and Training

```{r}
#| label: mrIML-model-beetle
# Model 1: Environment only
yhats_beetles_env <- mrIMLpredicts(
  X = X_beetles,
  Y = Y_beetles,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Model 2: Co-occurrence only
yhats_beetles_cooccur <- mrIMLpredicts(
  Y = Y_beetles,
  X1 = X1_beetles,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Model 3: Combined
yhats_beetles_combined <- mrIMLpredicts(
  X = X_beetles,
  Y = Y_beetles,
  X1 = X1_beetles,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)
```

### Beetle Performance Assessment

```{r beetle-performance, eval=FALSE}
# Evaluate model performance
ModelPerf_beetles_env <- mrIMLperformance(yhats_beetles_env)
ModelPerf_beetles_cooccur <- mrIMLperformance(yhats_beetles_cooccur)
ModelPerf_beetles_combined <- mrIMLperformance(yhats_beetles_combined)

# Performance comparison
perf_comparison_beetles <- mrPerformancePlot(
  ModelPerf1 = ModelPerf_beetles_combined,
  ModelPerf2 = ModelPerf_beetles_env,
  mode = "classification"
)

perf_comparison_beetles$performance_plot +
  labs(title = "Beetle Community Model Performance")

# Summary table
beetle_performance <- data.frame(
  Model = c("Environment only", "Co-occurrence only", "Combined"),
  MCC = c(
    ModelPerf_beetles_env[[2]],
    ModelPerf_beetles_cooccur[[2]],
    ModelPerf_beetles_combined[[2]]
  )
)

beetle_performance
```

### Beetle Variable Importance and Associations

```{r beetle-analysis, eval=FALSE}
# Bootstrap analysis
bs_beetles <- mrBootstrap(yhats_beetles_combined, num_bootstrap = 100)

# Variable importance
vi_beetles <- mrVip(
  yhats_beetles_combined,
  mrBootstrap_obj = bs_beetles,
  threshold = 0.5,
  global_top_var = 10
)

vi_beetles[[3]]

# Co-occurrence network
assoc_net_beetles <- mrCoOccurNet(bs_beetles)
assoc_net_beetles_filtered <- assoc_net_beetles %>%
  filter(mean_strength > 0.1)

# Network visualization
if (nrow(assoc_net_beetles_filtered) > 0) {
  g_beetles <- graph_from_data_frame(
    assoc_net_beetles_filtered,
    directed = TRUE
  )

  E(g_beetles)$Value <- assoc_net_beetles_filtered$mean_strength
  E(g_beetles)$Color <- ifelse(
    assoc_net_beetles_filtered$direction == "negative",
    no = "blue",
    yes = "red"
  )

  gg_beetles <- ggnetwork(g_beetles)

  ggplot(gg_beetles, aes(x = x, y = y, xend = xend, yend = yend)) +
    geom_edges(
      aes(color = Color, linewidth = Value),
      arrow = arrow(length = unit(5, "pt"), type = "closed")
    ) +
    geom_nodes(color = "gray", size = 3) +
    scale_color_identity() +
    theme_void() +
    geom_nodelabel_repel(aes(label = name), size = 2) +
    labs(title = "Beetle Co-occurrence Network")
} else {
  cat("No significant beetle associations detected at threshold 0.1")
}
```

## Bird Community Analysis

```{r bird-analysis, eval=FALSE}
# Prepare bird data (similar structure to beetles)
Y_birds <- raw_data_birds %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

Y_birds <- filterRareCommon(Y_birds, lower = 0.2, higher = 0.7)

# Use same environmental predictors but select relevant variables
var_sel_birds <- select_variables(Y = Y_birds, X = X_beetles)
X_birds <- var_sel_birds[[2]]
X1_birds <- Y_birds

# Train models
yhats_birds_env <- mrIMLpredicts(
  X = X_birds,
  Y = Y_birds,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

yhats_birds_cooccur <- mrIMLpredicts(
  Y = Y_birds,
  X1 = X1_birds,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

yhats_birds_combined <- mrIMLpredicts(
  X = X_birds,
  Y = Y_birds,
  X1 = X1_birds,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Performance assessment
ModelPerf_birds_env <- mrIMLperformance(yhats_birds_env)
ModelPerf_birds_cooccur <- mrIMLperformance(yhats_birds_cooccur)
ModelPerf_birds_combined <- mrIMLperformance(yhats_birds_combined)

bird_performance <- data.frame(
  Model = c("Environment only", "Co-occurrence only", "Combined"),
  MCC = c(
    ModelPerf_birds_env[[2]],
    ModelPerf_birds_cooccur[[2]],
    ModelPerf_birds_combined[[2]]
  )
)

cat("Bird Community Performance:\n")
print(bird_performance)
```

## Plant Community Analysis

```{r plant-analysis, eval=FALSE}
# Prepare plant data
Y_plants <- raw_data_plants %>%
  dplyr::select(-Site, -Distance, -Transect, -Age) %>%
  column_to_rownames(var = "Plot") %>%
  mutate_all(~ ifelse(. > 0, 1, .))

Y_plants <- filterRareCommon(Y_plants, lower = 0.2, higher = 0.7)

# Environmental predictors (remove plant-specific variables to avoid circularity)
X_plants <- raw_predictors %>%
  column_to_rownames(var = "plot_code") %>%
  rename_all(~ gsub(" ", "_", .)) %>%
  select(
    -contains("Bryo"),
    -contains("Moss"),
    -contains('Plant'),
    -Vegetation_cover,
    -plot_code_T_D
  ) %>%
  rename_with(~ gsub("Jayne", "", .), contains("Jayne"))

var_sel_plants <- select_variables(Y = Y_plants, X = X_plants)
X_plants <- var_sel_plants[[2]]
X1_plants <- Y_plants

# Train models
yhats_plants_env <- mrIMLpredicts(
  X = X_plants,
  Y = Y_plants,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

yhats_plants_cooccur <- mrIMLpredicts(
  Y = Y_plants,
  X1 = X1_plants,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

yhats_plants_combined <- mrIMLpredicts(
  X = X_plants,
  Y = Y_plants,
  X1 = X1_plants,
  Model = model_rf,
  balance_data = 'no',
  tune_grid_size = 5,
  prop = 0.6,
  k = 5,
  racing = TRUE
)

# Performance assessment
ModelPerf_plants_env <- mrIMLperformance(yhats_plants_env)
ModelPerf_plants_cooccur <- mrIMLperformance(yhats_plants_cooccur)
ModelPerf_plants_combined <- mrIMLperformance(yhats_plants_combined)

plant_performance <- data.frame(
  Model = c("Environment only", "Co-occurrence only", "Combined"),
  MCC = c(
    ModelPerf_plants_env[[2]],
    ModelPerf_plants_cooccur[[2]],
    ModelPerf_plants_combined[[2]]
  )
)

cat("Plant Community Performance:\n")
print(plant_performance)
```

## Comparative Analysis Across Taxonomic Groups

```{r comparative-analysis, eval=FALSE}
# Combine performance results
performance_summary <- data.frame(
  Community = rep(c("Beetles", "Birds", "Plants"), each = 3),
  Model = rep(c("Environment only", "Co-occurrence only", "Combined"), 3),
  MCC = c(
    beetle_performance$MCC,
    bird_performance$MCC,
    plant_performance$MCC
  )
)

# Visualization
ggplot(performance_summary, aes(x = Model, y = MCC, fill = Community)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_bw() +
  labs(
    title = "Model Performance Comparison Across Communities",
    x = "Model Type",
    y = "Matthews Correlation Coefficient"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Calculate improvement from adding co-occurrence
improvement_summary <- performance_summary %>%
  pivot_wider(names_from = Model, values_from = MCC) %>%
  mutate(
    Cooccur_improvement = `Co-occurrence only` - `Environment only`,
    Combined_improvement = Combined - `Environment only`
  )

print(improvement_summary)
```

## Variable Importance Analysis

```{r variable-importance-analysis, eval=FALSE}
# Plant community detailed analysis (best performing)
bs_plants <- mrBootstrap(yhats_plants_combined, num_bootstrap = 100)

vi_plants <- mrVip(
  yhats_plants_combined,
  mrBootstrap_obj = bs_plants,
  threshold = 0.5,
  global_top_var = 10
)

# Variable importance plot
vi_plants[[3]] +
  labs(title = "Plant Community Variable Importance")

# Covariate effects
covar_plants_age <- mrCovar(
  yhats_plants_combined,
  var = 'age_years_',
  sdthresh = 0.02
)

covar_plants_age[[1]] /
  covar_plants_age[[2]] /
  covar_plants_age[[3]] +
  plot_annotation(title = "Effect of Forest Age on Plant Community")
```

## Plant Co-occurrence Network

```{r plant-network, eval=FALSE}
# Generate plant co-occurrence network
assoc_net_plants <- mrCoOccurNet(bs_plants)
assoc_net_plants_filtered <- assoc_net_plants %>%
  filter(mean_strength > 0.1)

# Network visualization
g_plants <- graph_from_data_frame(assoc_net_plants_filtered, directed = TRUE)

E(g_plants)$Value <- assoc_net_plants_filtered$mean_strength
E(g_plants)$Color <- ifelse(
  assoc_net_plants_filtered$direction == "negative",
  "blue",
  "red"
)

# Use circular layout for better visualization
circle_layout <- layout_in_circle(g_plants)
gg_plants <- ggnetwork(g_plants, layout = circle_layout)

ggplot(gg_plants, aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_edges(
    aes(color = Color, linewidth = Value),
    curvature = 0.1,
    arrow = arrow(length = unit(5, "pt"), type = "closed")
  ) +
  geom_nodes(color = "gray", size = degree(g_plants, mode = "out") + 2) +
  scale_color_identity() +
  theme_void() +
  geom_nodelabel_repel(
    aes(label = name),
    size = 2,
    colour = "white",
    fill = "grey36"
  ) +
  labs(
    title = "Plant Co-occurrence Network",
    subtitle = "Strong positive associations between epiphytic species"
  )
```

## Interaction Analysis

```{r interaction-analysis, eval=FALSE}
# Analyze interactions in plant community
int_plants <- mrInteractions(
  yhats_plants_combined,
  num_bootstrap = 100,
  feature = 'Nothcunn',
  top_int = 10
)

int_plants[[1]] /
  int_plants[[2]] /
  int_plants[[3]] +
  plot_annotation(title = "Plant Community Interactions")
```

## Key Findings

```{r results-summary, eval=FALSE}
# Create summary table
results_table <- data.frame(
  Taxonomic_Group = c("Beetles", "Birds", "Plants"),
  Best_Model_MCC = c(
    max(beetle_performance$MCC),
    max(bird_performance$MCC),
    max(plant_performance$MCC)
  ),
  Cooccurrence_Effect = c(
    improvement_summary$Combined_improvement[1],
    improvement_summary$Combined_improvement[2],
    improvement_summary$Combined_improvement[3]
  ),
  Primary_Drivers = c(
    "Soil characteristics, microclimate",
    "Altitude, unmeasured structural conditions",
    "Forest age, succession gradient"
  )
)

knitr::kable(
  results_table,
  caption = "Summary of Forest Community Analysis Results",
  digits = 3
)
```

### Performance Patterns

Based on the expected results from the manuscript:

1. **Environment-only models performed best** across all taxonomic groups
2. **Plant communities** showed highest predictive performance (MCC â‰ˆ 0.45)
3. **Bird and beetle communities** showed similar, lower performance (MCC â‰ˆ 0.21)
4. **Co-occurrence patterns had minimal impact** on model performance

### Taxonomic Group Differences

#### Beetles
- **Key predictors**: Altitude, soil characteristics, microclimate variables (LAI, heat load index)
- **Limited associations**: Only one significant association detected (two *Decilaus* weevil species)
- **Interpretation**: Species largely respond independently to environmental gradients

#### Birds  
- **Key predictors**: Altitude dominates
- **No significant associations**: Species presences appear independent
- **Low explanatory power**: Suggests unmeasured structural habitat variables are important
- **Example**: Only Grey Fantail (*Rhipidura albiscapa*) showed modest improvement with co-occurrence data

#### Plants
- **Key predictors**: Forest age (succession), LAI, Easting gradient  
- **Strongest associations**: Multiple positive associations, particularly among epiphytic species
- **Best performance**: Clear successional patterns from early-seral to shade-tolerant rainforest species
- **Network structure**: Epiphytic ferns and bryophytes show strong co-occurrence (shared substrate requirements)

### Ecological Insights

```{r ecological-insights, eval=FALSE}
# Example: Epiphytic associations in plants
cat("Key plant associations detected:\n")
cat("- Large tree fern provides substrate for Rumohra adiantiformis\n")
cat("- Multiple epiphytic species co-occur on suitable substrates\n")
cat("- Succession drives community composition more than biotic interactions\n")

# Environmental gradients
cat("\nImportant environmental gradients:\n")
cat("- Altitude: Primary driver for beetles and birds\n")
cat("- Forest age: Critical for plant succession\n")
cat("- LAI and Easting: Important for beetles and plants\n")
cat("- Soil characteristics: Shape beetle communities\n")
```

## Methodological Insights

### Model Selection Strategy

The comparison of three model types (environment-only, co-occurrence-only, combined) reveals that:

1. **Environmental filtering dominates** community assembly in these forest systems
2. **Biotic interactions are secondary** but detectable in plant communities
3. **Co-occurrence data alone** performs poorly, emphasizing the importance of environmental drivers

### Variable Selection Impact

```{r variable-selection-insights, eval=FALSE}
# Demonstrate variable selection results
cat("Variable selection reduced dimensionality:\n")
cat("- Removed highly correlated predictors (>0.8 correlation)\n")
cat("- Eliminated predictors with minimal variance\n")
cat("- Retained ecologically meaningful gradients\n")
cat("- Improved model interpretability and performance\n")
```

### Bootstrapping Benefits

The bootstrap analysis provides:
- **Uncertainty estimation** for variable importance
- **Confidence intervals** for partial dependencies  
- **Robust network construction** from multiple model fits
- **Assessment of prediction stability**

## Comparison with Previous Studies

This analysis extends previous work (Fountain-Jones et al. 2015; Hingston et al. 2014) by:

1. **Unified framework**: Consistent methodology across taxonomic groups
2. **Interaction quantification**: Explicit measurement of biotic vs. abiotic effects  
3. **Non-linear relationships**: Capture of threshold and plateau effects
4. **Uncertainty quantification**: Bootstrap confidence intervals
5. **Network analysis**: Systematic co-occurrence network construction

### Novel Findings

- **Asymmetric plant associations**: Direction of influence between epiphytic species
- **Quantified interaction strength**: H-statistics reveal interaction importance
- **Threshold identification**: Non-linear responses to environmental gradients
- **Cross-community comparison**: Systematic differences in assembly mechanisms

## Management Implications

### Forest Succession

The strong performance of environment-only models suggests:
- **Habitat management** should focus on environmental conditions
- **Successional stage** is critical for plant community development
- **Microclimate variables** (LAI, heat load) are important for beetles
- **Structural complexity** may be key for bird communities (unmeasured)

### Conservation Priorities

```{r conservation-implications, eval=FALSE}
cat("Conservation implications:\n")
cat("1. Maintain environmental gradients across successional stages\n")
cat("2. Preserve old-growth characteristics (substrate for epiphytes)\n")
cat("3. Consider altitude and aspect in reserve design\n")
cat("4. Manage for microclimate heterogeneity\n")
cat("5. Monitor structural habitat development for bird communities\n")
```

## Technical Considerations

### Model Performance Limitations

- **Bird models**: Low explanatory power suggests missing predictors
- **Rare species**: Filtered out due to insufficient data (prevalence thresholds)
- **Temporal dynamics**: Cross-sectional data limits causal inference
- **Scale effects**: Plot-level analysis may miss landscape-scale processes

### Future Improvements

1. **Structural habitat measures**: LiDAR-derived metrics for bird habitat
2. **Temporal replication**: Multiple sampling periods to assess stability
3. **Functional traits**: Incorporation of species trait data
4. **Phylogenetic relationships**: Account for evolutionary constraints
5. **Spatial autocorrelation**: Explicit spatial modeling components

## Conclusions

This forest community analysis demonstrates that **environmental filtering is the dominant force** shaping community assembly across taxonomic groups, with **biotic interactions playing secondary roles**. The *MrIML 2.0* framework successfully:

1. **Quantifies relative importance** of environmental vs. biotic factors
2. **Reveals taxonomic differences** in assembly mechanisms  
3. **Identifies key environmental drivers** for each community
4. **Constructs interpretable co-occurrence networks**
5. **Provides uncertainty estimates** through bootstrapping

The results emphasize the importance of **maintaining environmental heterogeneity** and **successional gradients** for forest biodiversity conservation, while highlighting the need for **improved structural habitat characterization** particularly for bird communities.

## Session Information

```{r session-info}
sessionInfo()
```